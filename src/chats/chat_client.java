/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chats;


import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author user
 */
public class chat_client extends javax.swing.JFrame {

    static ServerSocket ss;
    static Socket s;
    static DataInputStream din;
    static DataOutputStream dout;
    static int j=0;
    //static int login=0;
    /**
     * Creates new form chat_client
     */
    public chat_client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        msg_send = new javax.swing.JButton();
        client = new javax.swing.JTextField();
        logout = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        users = new javax.swing.JTextArea();
        ipaddress = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sendfile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msg_area.setColumns(20);
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        msg_text.setText("message to send");
        msg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_textActionPerformed(evt);
            }
        });

        msg_send.setText("SEND");
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });

        client.setText("Name");

        logout.setText("LOGOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        name.setText("Name");

        login.setText("LOGIN");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        users.setColumns(20);
        users.setRows(5);
        jScrollPane2.setViewportView(users);

        ipaddress.setText("localhost");

        jLabel1.setText("IP Address :");

        jLabel2.setText("Name of Destination :");

        jLabel3.setText("Your Message :");

        jLabel4.setText("Your Name :");

        sendfile.setText("SEND FILE");
        sendfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msg_text))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(client, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ipaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(login, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendfile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(login)
                    .addComponent(ipaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(client, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logout)
                    .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(sendfile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msg_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_textActionPerformed
        // TODO add your handling code here:
      
       
    }//GEN-LAST:event_msg_textActionPerformed
 
    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_sendActionPerformed
        // TODO add your handling code here:
        Thread sendMessage = new Thread(new Runnable() 
        {
            @Override
            public void run() {
              //  while (true) {
 
                    // read the message to deliver.
                   // String msg = scn.nextLine();
                    String msgout="";
                    String destination="";
                    destination=client.getText().trim();
                    msgout=msg_text.getText().trim();
                    if(j==1)
                        return ;
                    try {
                        // write on the output stream
                        dout.writeUTF(destination);
                        dout.flush();
                        dout.writeUTF("msg");
                        dout.flush();
                        dout.writeUTF(msgout);
                        dout.flush();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
           // }
        });
       sendMessage.start();
    }//GEN-LAST:event_msg_sendActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
       
         Thread sendMessage = new Thread(new Runnable() 
        {
            @Override
            public void run() {
              //  while (true) {
 
                    // read the message to deliver.
                   // String msg = scn.nextLine();
                    String msgout="";
                    String destination="";
                    destination=client.getText().trim();
                    msgout="logout";
                    if(j==1)
                         return ;
                    try {
                        // write on the output stream
                        j=1;
                        dout.writeUTF(destination);
                        dout.writeUTF(msgout);
                        dout.flush();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
           // }
        });
       sendMessage.start();
    }//GEN-LAST:event_logoutActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
       
        try{
            if(j==2)
                return ;
            String ip="";
            ip=ipaddress.getText().trim();
            s=new Socket(ip,1234);
            din=new DataInputStream(s.getInputStream());
            dout=new DataOutputStream(s.getOutputStream());
            String name1="Name";
            j=2;
            while(name1=="Name"||name1==null){ 
            name1=name.getText().trim();}
            dout.writeUTF(name1);
            dout.flush();
        }
        catch(Exception e){
            
        }
            Thread readMessage = new Thread(new Runnable() 
        {
            @Override
            public void run() {
 
                while (true) {
                    try {
                        // read the message sent to this client
                        String content=din.readUTF();
                        
                        if(content.equals("logout"))
                        {
                            s.close();
                            return ;
                        }
                        if(content.charAt(0)=='L')
                        users.setText(content);
                        else{
                         if(content.equals("msg")){
                          
                             String msgin=din.readUTF();
                             msg_area.setText(msg_area.getText().trim()+System.lineSeparator()+msgin);
                          // msg_area.setText(newline());
                         }
                         else if(content.equals("file"))
                         { 
                             String filename=din.readUTF();
                             String name=din.readUTF();
                             msg_area.setText(msg_area.getText().trim()+System.lineSeparator()+name+" : " +filename);
                             byte b[]=new byte [1024];
                             filename="Your_"+filename;
                             System.out.println("Receving file..");
                             msg_area.setText(msg_area.getText().trim()+System.lineSeparator()+"Receving file..");
                             FileOutputStream fos=new FileOutputStream(new File(filename),true);
                             long bytesRead;
                             do
                             {
                               bytesRead = din.read(b, 0, b.length);
                               fos.write(b,0,b.length);
                             }while(!(bytesRead<1024));
                             System.out.println("Comleted");
                             msg_area.setText(msg_area.getText().trim()+System.lineSeparator()+"File Saved As: "+filename);
                             fos.close();
                         }
                        }
                    } catch (IOException e) {
 
                        e.printStackTrace();
                    }
                }
            }
        });
           readMessage.start(); 
       
        
    }//GEN-LAST:event_loginActionPerformed

    private void sendfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendfileActionPerformed
     Thread sendMessage = new Thread(new Runnable() 
        {
            @Override
            public void run() {
        // TODO add your handling code here:
       JFileChooser fc=new JFileChooser();    
       int i=fc.showOpenDialog(null);  
       while(i!=JFileChooser.APPROVE_OPTION);
       if(i==JFileChooser.APPROVE_OPTION){    
        File f=fc.getSelectedFile();    
        String filepath=f.getPath();    
        try{  
       // BufferedReader br=new BufferedReader(new FileReader(filepath));    
        //String s1="",s2="";  
        String destination=client.getText().trim();
        //while((s1=br.readLine())!=null)    
        //s2+=s1+"\n";
        FileInputStream fin=new FileInputStream(f);
        long sz=(int) f.length();

        byte b[]=new byte [1024];

      int read;
      dout.writeUTF(destination);
      dout.flush();
      dout.writeUTF("file");
      dout.writeUTF(f.getName());  
      dout.writeUTF(Long.toString(sz)); 
      while((read = fin.read(b)) != -1){
             dout.write(b, 0, read); 
             dout.flush(); 
       }
        fin.close();
        if(j==1)
            return ;
       
        // br.close();
          
         
          
          //dout.writeUTF(s2);
           
        }catch (IOException ex) {ex.printStackTrace();  }
      
    }}
            
        });
     sendMessage.start();
    }//GEN-LAST:event_sendfileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws UnknownHostException, IOException  {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chat_client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chat_client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chat_client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chat_client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new chat_client().setVisible(true);
            }
        });
       
       
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField client;
    private static javax.swing.JTextField ipaddress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton login;
    private javax.swing.JButton logout;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JButton msg_send;
    private javax.swing.JTextField msg_text;
    private static javax.swing.JTextField name;
    private javax.swing.JButton sendfile;
    private static javax.swing.JTextArea users;
    // End of variables declaration//GEN-END:variables
}
